function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 20-Dec-2022 19:45:20.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 12xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [2 3 4 5 6 7 8 9 10 11 12];
x1_step2.xoffset = [15.811;-114;3.6596e-06;9.82262e-05;4.8888e-06;0.000394561;0.000147083;0.1113;0.0283;0.0148;0.0003];
x1_step2.gain = [0.370219540187331;0.0333333333333333;0.123421696608517;0.00494134444191343;179108.754835936;176382.397036775;0.268990738903863;2.25047822662316;2.05824843058557;4.05268490374873;3.98089171974522];
x1_step2.ymin = -1;

% Layer 1
b1 = [-1.619242654412691218;-1.9425271772244070423;0.75400555051397100126;-1.6117967273064774947;-3.7529268963753072974;-0.48607942791645031289;-0.59770867370322133816;-0.10485699016850248688;2.9936860145608990003;-0.40450838664995136806;0.089119474299167972253;-1.6356395713463911523;-1.1567981100934219274;-0.56965993059583919234;-1.0430922385391971918;1.0219047772367289006;-0.95329206650449405114;1.6444982840614066344;-1.7365580869906829253;-1.4075565624121508801];
IW1_1 = [0.94032996306202687453 -0.011559790308231095504 0.057882436884509558261 0.28791279355316035105 -1.0920788780516019756 1.3621291218592006533 -1.4685577825615296899 -0.011131147811064530731 0.35284645693431343494 -1.2405781749830226968 -0.43825978820122901691;0.26375732522653100309 0.20431789197572705619 1.2356880250184612002 -0.18024060654115026114 -0.074055888405845662903 0.066930696032134542883 -0.27189073742239905362 0.33098059136499202726 -0.27432698419270384882 -0.72444041448379981052 0.44555106721947268511;-0.40982792784217625393 0.87736136067454328913 -0.12865030673169741693 0.010957850452881667813 0.79521975380064435779 -1.273488150323353274 0.032095329127523497537 -0.41316063581767781265 -0.17941876391239183763 1.0932725723450502642 0.67214881603320242309;0.46940432139144921964 -4.4222345572271688496 0.65346010124241482586 1.3818246431479084269 0.44999319781229180082 0.1620562221542670156 -0.63917113139569681213 0.42293278270931139451 0.96921246011292616629 1.8862071092549272944 -1.9485845131684302878;-1.0215892268801949339 -0.50836896080196680714 2.2631429569936862833 1.9264016048165428785 -1.2004411707096189765 -0.015738562070539523219 2.5467305010984278013 -1.5562039056310619234 -3.2487271065242366852 -0.40954014932712751174 16.114497469668059182;-1.1762652062340099857 -1.6129814070584471697 0.52045486689440889627 -0.80162227765658722323 0.46692648670803338362 -8.0497719238335658787 -2.2917276536752395621 0.40945700740827090103 0.96109129866032938505 -0.0049020266838510203819 -0.91871752129638695195;0.75396027257172937297 0.90665872812043957207 0.37117036040978551581 0.97939268083163044665 0.2324598714158714885 0.31614422423664534367 -0.12120055134641270767 -0.071308382996733227221 -1.0047100170282747822 -1.9056019814898559339 -0.47012492238822145563;0.47248251531993651353 -0.60890966500505805392 -1.0903484951704971451 -0.40439296113656253429 0.43362319275187644063 -0.47268808481263180354 -0.43918498408391182242 0.75369336387889740436 0.83699323156769056542 -0.28400945273136657399 -0.25088124138897921478;-1.8830816828681116171 1.2984556267166282861 -2.0809180728584442122 -3.7577697675162839985 -1.5214319676250742663 11.830749822380935754 -0.30110265945961012246 2.1165913902122190926 1.706372609108667282 -0.89296864034737366556 0.055313998582483550615;0.67809329733521728212 0.49922458290461574348 1.7435187989528531105 1.6814829546107179503 0.34915276461204042269 0.23692704475348186355 -0.018984981517913984 1.3113771871952102366 0.30175591486316422074 -2.0682045963735649075 -1.8049440753062262477;-0.93856330781251728901 -0.066142247478995608301 0.81092137540894648762 0.31355631936080569089 1.287827493738048279 -0.3205621106368192752 0.040765836971326012417 0.61596525865225071339 0.17887391935766358553 0.36639808330032069827 -0.67719274283291552852;-2.0253132228408423643 -1.2443250189116015214 0.04018311688957518224 1.6259430898029649804 -2.2113739500578692976 0.090036990326710225618 1.4436326620429305034 -1.5263004988591650779 -2.2101407592854198647 -0.83644846173706433046 8.5442449947523524401;-1.054229668684348642 -1.6711076097762158632 1.3788798903513834748 0.18712696383452984139 0.1530914674105943174 -0.45641649929965494303 0.34492555499784860462 0.071743222017805627355 -0.028922144081531177967 2.019829234659385353 -0.60645783380093509773;-1.1716801740686801914 -2.1787382759750641981 -0.75652054258459056069 0.66831304185913142923 2.0156441862284788513 4.9967489286970687701 -2.1099545624167328484 -0.67365403488847375169 0.37081913083054185432 -1.858980026663598295 -1.151505843080166569;-0.15927519618006200086 2.1050811511038216572 -0.88259138741687048757 -0.71543402964890778772 0.15202954482348612908 -0.93301520554920214234 1.6877101098744831109 0.33365148163946900528 0.75118710670265909091 1.1630178879360226762 1.2371547292925468842;-0.7795862622203907355 5.2949388271383446281 -0.98732045290467751464 -0.98482600971363853937 -0.88309515930317938892 0.36098033222348652194 2.5972101567187539928 0.97092968917854138855 -0.88516151879569660021 -1.6358342935224470249 6.1594757586422810292;-1.4719961309604965294 2.1849479809930105745 -1.5598080367670821289 -3.4237366712374215361 -1.5933188471217318849 0.0072875196071034882561 4.5847785406970071875 -0.3234925572822925921 -3.1156891873698615569 -1.7631253254745757886 8.0281782306514219982;0.40155841517596679857 0.34881542723469438627 -0.21566122752998431733 1.195483790351219211 0.93905100997525603468 0.14888934520906654813 0.031005054241588263925 0.88210517926675546807 0.92326425878282492032 -0.44392853230858442259 0.23452663313212240848;-0.73753630024049277036 0.3081220070308620107 -0.11184172301378916825 0.083592558144538017806 0.93410601887740829508 -0.42272536786225306527 -0.60994928671421666522 0.94542723876770040636 0.62470445332621149515 0.35308282588487371889 0.13566039325541826011;-1.25316395822010751 0.28925144849366357658 -1.2866797233790312482 -0.23404966604258492513 0.51318918784040201686 -2.8263635805475599838 -0.59625761438360691535 0.72358454825813223188 -0.53071432735684553883 -0.56075838515810205731 1.0563560797323678919];

% Layer 2
b2 = -0.087520381181195719411;
LW2_1 = [-2.5375200411042095894 -0.037686610820134240629 1.9778774870651794071 -10.028126728799675149 16.903759297994792377 -6.2578173550644846657 -2.678627559503523603 -0.21250636056959310016 11.55247669345655126 -4.1649598603729076629 -0.10710340867795292707 9.0513207441395575614 -3.2446169764002847913 -5.7514464065075596721 3.8572257052686524936 10.3958178721595349 10.589607271059225724 -0.57512996617596023885 0.48195704010173601173 3.2269158082847333446];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1);
    Xp1 = mapminmax_apply(temp,x1_step2);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
  y = x(settings.keep,:);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
